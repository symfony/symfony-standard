#!/usr/bin/env php
<?php

/*
 * This file is part of the Symfony Standard Edition.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

set_time_limit(0);

$rootDir   = dirname(__DIR__);
$vendorDir = $rootDir.'/vendor';

array_shift($argv);
if (!isset($argv[0])) {
    exit(<<<EOF
Symfony2 vendors script management.

Specify a command to run:

 install: install vendors as specified in composer.json or composer.lock (recommended)
 update:  update vendors to their latest versions (as specified in composer.json)

EOF
    );
}

if (!in_array($command = array_shift($argv), array('install', 'update'))) {
    exit(sprintf("Command \"%s\" does not exist.\n", $command));
}

// Download composer if not downloaded yet
if (!file_exists($rootDir.'/composer.phar')) {
    file_put_contents($rootDir.'/composer.phar',
        file_get_contents('http://getcomposer.org/composer.phar')
    );
}

// php on windows can't use the shebang line from system()
$interpreter = defined('PHP_WINDOWS_VERSION_BUILD') ? 'php.exe' : 'php';

// Change directory, as composer.phar must be run from the working directory
chdir($rootDir);

// Install/update dependencies
system(sprintf('%s %s %s', $interpreter, escapeshellarg($rootDir.'/composer.phar'), $command));